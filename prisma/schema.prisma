// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  posts       Post[]
  
  @@map("categories")
}

model Post {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  content     String
  excerpt     String?
  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id])
  
  @@map("posts")
}

model Article {
  id        String   @id @default(cuid())
  title     String   @default("无标题")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  todos     TodoItem[]
  
  @@map("articles")
}

model TodoItem {
  id          String   @id @default(cuid())
  content     String   @default("")
  completed   Boolean  @default(false)
  order       Int      @default(0)
  indentLevel Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  articleId   String
  article     Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  
  @@map("todo_items")
}
